using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using BotDataSet;
using Telegram.Bot.Types.ReplyMarkups;

namespace TGBotGame
{
    public static class Keyboards
    {
        public static ReplyKeyboardMarkup PrepareMenuKeyboard()
        {
            var rpm = new ReplyKeyboardMarkup();
            rpm.Keyboard = new KeyboardButton[][]
            {
                new KeyboardButton[]
                {
                    new KeyboardButton("üó£ –ü–æ–∑–≤–∞—Ç—å –º–µ–Ω—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏–≥—Ä—É")
                },
                new KeyboardButton[]
                {
                new KeyboardButton("‚ùì –£–∑–Ω–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É –∏ —Å–Ω—è—Ç—å –º—É—Ç/–≤–∞—Ä–Ω/–±–∞–Ω")
                },
                new KeyboardButton[]
                {
                    new KeyboardButton("ü§ù –ö—Ç–æ —É –º–µ–Ω—è –≤ –¥—Ä—É–∑—å—è—Ö?")
                },
                new KeyboardButton[]
                {
                    new KeyboardButton("üìï –ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ –∏ –∏–≥—Ä—ã"),
                    new KeyboardButton("ü§µüèª –û–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–µ–π")
                }

            };
            return rpm;
        }

        public static ReplyKeyboardMarkup PrepareFriendsKeyboard()
        {
            var rpm = new ReplyKeyboardMarkup();
            rpm.Keyboard = new KeyboardButton[][]
            {
                new KeyboardButton[]
                {
                    new KeyboardButton("–ú–æ–∏ –¥—Ä—É–∑—å—è"),
                    new KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∏–∑ –¥—Ä—É–∑–µ–π")
                },
                new KeyboardButton[]
                {
                    new KeyboardButton("–ú–µ–Ω—é")
                }
            };
            return rpm;
        }

        public static ReplyKeyboardMarkup PrepareReasonKeyboard()
        {
            var rpm = new ReplyKeyboardMarkup();
            rpm.Keyboard = new KeyboardButton[][]
            {
                new KeyboardButton[]
                {
                    new KeyboardButton("–ü—Ä–∏—á–∏–Ω–∞ –≤–∞—Ä–Ω–∞"),
                    new KeyboardButton("–ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞"),
                    new KeyboardButton("–ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞")
                },
                new KeyboardButton[]
                {
                    new KeyboardButton("–ú–µ–Ω—é")
                }
            };
            return rpm;
        }
        
        public static ReplyKeyboardMarkup PrepareReasonPunishmentKeyboard()
        {
            var rpm = new ReplyKeyboardMarkup();
            rpm.Keyboard = new KeyboardButton[][]
            {
                new KeyboardButton[]
                {
                    new KeyboardButton("–£–∑–Ω–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É"),
                    new KeyboardButton("–°–Ω—è—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ")
                },
                new KeyboardButton[]
                {
                    new KeyboardButton("–ú–µ–Ω—é")
                }
            };
            return rpm;
        }
        
        public static ReplyKeyboardMarkup PrepareRemovePunishmentKeyboard()
        {
            var rpm = new ReplyKeyboardMarkup();
            rpm.Keyboard = new KeyboardButton[][]
            {
                new KeyboardButton[]
                {
                    new KeyboardButton("–°–Ω—è—Ç—å –≤–∞—Ä–Ω"),
                    new KeyboardButton("–°–Ω—è—Ç—å –º—É—Ç"),
                    new KeyboardButton("–°–Ω—è—Ç—å –±–∞–Ω")
                },
                new KeyboardButton[]
                {
                    new KeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")
                },
                new KeyboardButton[]
                {
                    new KeyboardButton("–ú–µ–Ω—é")
                }
            };
            return rpm;
        }
        
        public static ReplyKeyboardMarkup PrepareFillBalanceKeyboard()
        {
            var rpm = new ReplyKeyboardMarkup();
            rpm.Keyboard = new KeyboardButton[][]
            {
                new KeyboardButton[]
                {
                    new KeyboardButton("5 –∫—Ä–µ–¥–∏—Ç–æ–≤"),
                    new KeyboardButton("10 –∫—Ä–µ–¥–∏—Ç–æ–≤"),
                    new KeyboardButton("20 –∫—Ä–µ–¥–∏—Ç–æ–≤")
                },
                new KeyboardButton[]
                {
                    new KeyboardButton("–ú–µ–Ω—é")
                }
            };
            return rpm;
        }

        public static InlineKeyboardMarkup PrepareRemoveFriendsList(Telegram.Bot.Types.User user)
        {
            var friendsList = Assist.GetFriendsList(user);
            List<InlineKeyboardButton> users = new List<InlineKeyboardButton>();
            foreach (var friend in friendsList)
            {
                var btn = new InlineKeyboardButton();
                btn.Text = friend.UserName;
                btn.CallbackData = friend.UserId.ToString();
                users.Add(btn);
            }

            return new InlineKeyboardMarkup(users);

        }

        public static InlineKeyboardMarkup PrepareUnpunishmentAdminsKeyboard(Telegram.Bot.Types.User user)
        {
            var btn = new InlineKeyboardButton();
            btn.Text = "–ì–æ—Ç–æ–≤–æ!(—Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–∏—Ç—Å—è)";
            btn.CallbackData = "remove_message";
            return new InlineKeyboardMarkup(btn);
        }

        public static InlineKeyboardMarkup PrepareLinkKeyboardMarkup(string link)
        {
            var btn = new InlineKeyboardButton();
            btn.Text = "–ö–∞–Ω–∞–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π";
            btn.Url = link;
            return new InlineKeyboardMarkup(btn);
        }
    }
}